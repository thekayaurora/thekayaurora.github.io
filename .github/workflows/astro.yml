name: Deploy Astro site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Determine version
        id: version
        run: |
          YY=$(date +'%y')
          M=$(date +'%m' | sed 's/^0//')
          PREFIX="v${YY}.${M}"

          LAST_TAG=$(git tag --list "${PREFIX}*" | sort -V | tail -n 1)

          if [ -z "$LAST_TAG" ]; then
            NEW_TAG="${PREFIX}"
          else
            if [[ "$LAST_TAG" =~ ^v[0-9]{2}\.[0-9]{1,2}\.([0-9]+)$ ]]; then
              LAST_REV=${BASH_REMATCH[1]}
              NEW_REV=$((LAST_REV + 1))
              NEW_TAG="${PREFIX}.${NEW_REV}"
            else
              NEW_TAG="${PREFIX}.1"
            fi
          fi

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Determined version: $NEW_TAG"

      - name: Update package.json version
        run: |
          npm pkg set version=${NEW_TAG#v}
          cat package.json

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

      - name: Tag repo (optional)
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG || echo "Skipping tag push (no perms)"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
