---
import Layout from "../../../layouts/Site.astro";

type BlogPost = {
  frontmatter: {
    title: string;
    date: string;
    desc: string;
    tags: string[];
  };
  url: string;
};

export async function getStaticPaths() {
  const posts = Object.values(import.meta.glob("../../blog/*.md", { eager: true })) as BlogPost[];

  const tags = new Set<string>();
  posts.forEach((post) => {
    post.frontmatter.tags?.forEach((tag) => tags.add(tag));
  });

  return Array.from(tags).map((tag) => ({
    params: { tag },
  }));
}

const posts = Object.values(import.meta.glob("../../blog/*.md", { eager: true })) as BlogPost[];

const { tag } = Astro.params;

const taggedPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(tag)
);

taggedPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
);
---

<Layout title="Blog" head="✏️ Blog!" desc=`Posts tagged with <code>${tag}</code>. <a href='/tags'>View all tags</a>`` showRssButton={true}>
    {taggedPosts.map((post) => 
    <div id="blog">
        <ul>
        <li><h2><a href={post.url} id="postlink">{post.frontmatter.title}</a></h2></li>
        </ul>
        <div>{post.frontmatter.date}&nbsp;&nbsp;•&nbsp;&nbsp;<i>{post.frontmatter.desc || 'No description available'}</i></div>
        <div>{post.frontmatter.tags && (<ul id="tagarray" class="rf--hidden">{post.frontmatter.tags.map(tag => (<li><a class="tag rf--hidden" href={`/tags/${encodeURIComponent(tag)}/`}>{tag}</a></li>))}</ul>)}</div>
    </div>
    )}
</Layout>